name: Archive Build Artifacts and Create Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  archive_libedgetpu:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download and Archive Artifacts - libedgetpu
      uses: actions/download-artifact@v3
      with:
        name: libedgetpu-build-artifact
        path: artifacts/libedgetpu

    - name: Create GitHub Release if not exists
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 'v1.0.0'
        release_name: 'v1.0.0 Release'
        draft: false
        prerelease: false

    - name: Upload Release Asset - libedgetpu
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/libedgetpu/libedgetpu_direct_all.so
        asset_name: libedgetpu_direct_all.so
        asset_content_type: application/octet-stream

  archive_tflite_runtime:
    runs-on: ubuntu-latest
    needs: archive_libedgetpu

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download and Archive Artifacts - TensorFlow Lite Runtime
      uses: actions/download-artifact@v3
      with:
        name: tflite-runtime-build-artifact
        path: artifacts/tflite_runtime

    - name: Upload Release Asset - TensorFlow Lite Runtime
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GB_TOKEN }}
      with:
        # Correct reference to the output of the previous job's step
        upload_url: ${{ needs.archive_libedgetpu.outputs.create_release.outputs.upload_url }}
        asset_path: artifacts/tflite_runtime/tflite_runtime-2.17.0.whl
        asset_name: tflite_runtime-2.17.0.whl
        asset_content_type: application/octet-stream

  archive_pycoral:
    runs-on: ubuntu-latest
    needs: archive_tflite_runtime

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download and Archive Artifacts - PyCoral
      uses: actions/download-artifact@v3
      with:
        name: pycoral-build-artifact
        path: artifacts/pycoral

    - name: Upload Release Asset - PyCoral
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GB_TOKEN }}
      with:
        # Correct reference to the output of the previous job's step
        upload_url: ${{ needs.archive_tflite_runtime.outputs.create_release.outputs.upload_url }}
        asset_path: artifacts/pycoral/pycoral-1.0.0.whl
        asset_name: pycoral-1.0.0.whl
        asset_content_type: application/octet-stream
