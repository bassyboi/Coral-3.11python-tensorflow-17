name: Build Coral Edge TPU Components with TensorFlow 2.17.0 and NumPy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Updated to v4 for node20 compatibility

    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y build-essential cmake git wget python3.11 python3.11-dev python3.11-venv python3-pip libusb-1.0-0-dev

    - name: Install Bazel
      run: |
        sudo apt-get install -y apt-transport-https curl gnupg
        curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor >bazel-archive-keyring.gpg
        sudo mv bazel-archive-keyring.gpg /usr/share/keyrings
        echo "deb [signed-by=/usr/share/keyrings/bazel-archive-keyring.gpg] http://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
        sudo apt-get update && sudo apt-get install -y bazel-5.3.0  # Specify Bazel version

    - name: Set up Python 3.11 environment
      uses: actions/setup-python@v5  # Updated to v5 for node20 compatibility
      with:
        python-version: '3.11'

    - name: Set up Python virtual environment
      run: |
        python3.11 -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip

    - name: Install TensorFlow 2.17.0 and Compatible NumPy Version
      run: |
        source venv/bin/activate
        python -m pip install tensorflow==2.17.0
        python -m pip install "numpy>=1.23.5,<2.0.0"

    - name: Install Additional Dependencies (Pandas, Matplotlib, SciPy, etc.)
      run: |
        source venv/bin/activate
        python -m pip install pandas matplotlib scipy scikit-learn

    - name: Build libedgetpu with XNNPACK Patch
      run: |
        source venv/bin/activate
        git clone https://github.com/google-coral/libedgetpu.git
        cd libedgetpu
        # List all files to confirm the presence of WORKSPACE
        echo "Listing all files to verify the presence of WORKSPACE:"
        find . -type f
        # Check if the WORKSPACE file exists
        if [ -f "WORKSPACE" ]; then
          echo "Before modification:"
          cat WORKSPACE
          # Correct sed command to update TensorFlow commit in WORKSPACE
          sed -i 's/tensorflow_commit = .*/tensorflow_commit = "tensorflow\/v2.17.0"/g' WORKSPACE
          echo "After modification:"
          cat WORKSPACE
        else
          echo "WORKSPACE file not found. Exiting..."
          exit 1
        fi
        # Clean and build libedgetpu with the correct TensorFlow commit
        bazel clean --expunge  
        bazel fetch //tflite/public:libedgetpu_direct_all.so.stripped
        # Find and patch all instances of the unsupported flag in all Bazel files
        find . -type f \( -name "BUILD.bazel" -o -name "*.bzl" -o -name "*.c" \) -exec sed -i 's/-mavx512fp16/-mavx512bf16/g' {} +
        # Verify replacements
        grep -r -l "-mavx512fp16" . || echo "All replacements done successfully."
        # Build libedgetpu with patched XNNPACK configuration
        bazel build --cxxopt='-std=c++17' --sandbox_debug --verbose_failures //tflite/public:libedgetpu_direct_all.so.stripped
        sudo cp bazel-bin/tflite/public/libedgetpu_direct_all.so /usr/lib/x86_64-linux-gnu/
        sudo ldconfig

    - name: Build TensorFlow Lite Runtime with TensorFlow 2.17.0
      run: |
        source venv/bin/activate
        git clone https://github.com/tensorflow/tensorflow.git
        cd tensorflow
        git checkout v2.17.0
        # Modify the build script to support TensorFlow 2.17.0-specific flags or configurations if needed
        ./tensorflow/lite/tools/pip_package/build_pip_package_with_bazel.sh || { 
          echo "TensorFlow Lite build failed. Attempting fix..."; 
          # Example fix: Update the build script to use newer or corrected flags, or manually modify Bazel files
          find . -type f -name "*.bzl" -exec sed -i 's/some_old_flag/some_new_flag/g' {} +;
          bazel clean --expunge;
          ./tensorflow/lite/tools/pip_package/build_pip_package_with_bazel.sh;
        }
        python -m pip install tensorflow/lite/tools/pip_package/gen/tflite_pip/python3/dist/tflite_runtime-*.whl

    - name: Build PyCoral with TensorFlow 2.17.0
      run: |
        source venv/bin/activate
        git clone --recurse-submodules https://github.com/google-coral/pycoral --depth 1
        cd pycoral
        sudo bash scripts/build.sh
        make wheel
        python -m pip install $(ls dist/*.whl)

    - name: Archive build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: coral-build-artifacts
        path: |
          libedgetpu/out/direct/k8/*
          tensorflow/lite/tools/pip_package/gen/tflite_pip/python3/dist/*
